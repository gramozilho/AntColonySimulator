[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/Placeholders/hexagon.png" type="Texture" id=2]
[ext_resource path="res://Assets/Placeholders/hexagon_unexplored.png" type="Texture" id=3]

[sub_resource type="GDScript" id=4]
script/source = "extends Area2D

var _is_hovering := false

enum FACTIONS {GREEN, RED, BLUE, YELLOW, PURPLE, BLUEISH}
export(FACTIONS) var faction setget update_faction
const colors = {
	0: Color(.0, .8, .0, 1.0),
	1: Color(.8, .0, .0, 1.0),
	2: Color(.0, .0, .8, 1.0),
	3: Color(.8, .8, .0, 1.0),
	4: Color(.8, .0, .8, 1.0),
	5: Color(.0, .8, .8, 1.0)
}
onready var base_color
onready var off_color
var base_color_unexplored = Color(.8, .8, .8, 1.0)
var off_color_unexplored = Color(.2, .2, .2, 1.0)

var army_size = 0
export(Vector2) var map_pos
signal pressed
var tile_visible = true setget update_visibility
var tile_explored = false setget update_explored
var tile_selectable = true


func _ready():
	update_faction(faction)
	$CollisionPolygon2D/SpriteExplored.modulate = off_color
	$CollisionPolygon2D/SpriteUnexplored.modulate = off_color_unexplored
	$ArmySize.text = \"(\" + str(map_pos.x) + \",\" + str(map_pos.y) + \")\"
	update_visibility(tile_visible)
	update_explored(tile_explored)
	make_connections()
	
func make_connections():
	# Handle local connections
	connect(\"input_event\", self, \"_on_OverlayCell_input_event\")
	connect(\"mouse_entered\", self, \"_on_OverlayCell_mouse_entered\")
	connect(\"mouse_exited\", self, \"_on_OverlayCell_mouse_exited\")

func _on_OverlayCell_input_event(_viewport, event, _shape_idx) -> void:
	if event is InputEventMouseButton:
		if event.button_index == BUTTON_LEFT and event.pressed and tile_selectable:
			#print('Tile pressed (local) ', map_pos)
			pressed_animation()
			#emit_signal(\"tile_pressed\", map_pos)
			emit_signal(\"pressed\", map_pos)
			#_is_hovering = false

func highlight(flag):
	if flag:
		$CollisionPolygon2D/SpriteExplored.modulate = base_color
		$CollisionPolygon2D/SpriteUnexplored.modulate = base_color_unexplored
	else:
		$CollisionPolygon2D/SpriteExplored.modulate = off_color
		$CollisionPolygon2D/SpriteUnexplored.modulate = off_color_unexplored

func _on_OverlayCell_mouse_entered() -> void:
	#print('Over tile ', map_pos)
	_is_hovering = true
	if tile_selectable:
		#$CollisionPolygon2D/Sprite.modulate = base_color
		$AnimationPlayer.play(\"Bob\")

func _on_OverlayCell_mouse_exited() -> void:
	_is_hovering = false
	#if tile_selectable:
	#	$CollisionPolygon2D/Sprite.modulate = off_color
		#$AnimationPlayer.play(\"Reset\")


func _on_AnimationPlayer_animation_finished(_anim_name : String) -> void:
	if (_is_hovering):
		$AnimationPlayer.play(\"Bob\")
	pass

func pressed_animation():
	$AnimationPlayer.play(\"Press\")


func update_visibility(visibility_flag) -> void:
	tile_visible = visibility_flag
	visible = visibility_flag

func update_explored(explored_flag) -> void:
	tile_explored = explored_flag
	$CollisionPolygon2D/SpriteExplored.visible = explored_flag
	$CollisionPolygon2D/SpriteUnexplored.visible = !explored_flag

func update_faction(faction_idx):
	faction = faction_idx
	base_color = colors[faction]
	off_color = base_color
	off_color[3] = 0.5
	if _is_hovering:
		$CollisionPolygon2D/SpriteExplored.modulate = base_color
	else:
		$CollisionPolygon2D/SpriteExplored.modulate = off_color

func get_faction_name():
	return FACTIONS.keys()[faction]

func summary():
	return {'map_pos': map_pos, 'faction': faction, 'tile_explored': tile_explored}

func populate(data):
	assert(data['map_pos'] == map_pos)
	self.faction = data['faction']
	self.tile_explored = data['tile_explored']
"

[sub_resource type="Animation" id=1]
resource_name = "Bob"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("CollisionPolygon2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 5.5, 5.5 ), Vector2( 5, 5 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "Press"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("CollisionPolygon2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ), Vector2( 4.5, 4.5 ), Vector2( 5, 5 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "Reset"
tracks/0/type = "value"
tracks/0/path = NodePath("CollisionPolygon2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 5 ) ]
}

[node name="OverlayCell" type="Area2D"]
script = SubResource( 4 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
scale = Vector2( 5, 5 )
polygon = PoolVector2Array( -5.93475, -11.2684, 6.11079, -11.2684, 16.7665, -0.33475, 5.92548, 10.7842, -6.02741, 10.7842, -16.9611, -0.149435 )

[node name="SpriteUnexplored" type="Sprite" parent="CollisionPolygon2D"]
visible = false
modulate = Color( 0.223529, 0.223529, 0.223529, 1 )
position = Vector2( 0, -0.23327 )
texture = ExtResource( 3 )

[node name="SpriteExplored" type="Sprite" parent="CollisionPolygon2D"]
position = Vector2( 0, -0.23327 )
texture = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Bob = SubResource( 1 )
anims/Press = SubResource( 2 )
anims/Reset = SubResource( 3 )

[node name="ArmySize" type="Label" parent="."]
modulate = Color( 0, 0, 0, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_top = -7.0
margin_bottom = 7.0
grow_horizontal = 2
grow_vertical = 2
align = 1
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
